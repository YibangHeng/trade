syntax = "proto3";

package trade.types;

import "google/protobuf/timestamp.proto";

import "enums.proto";

message Symbol
{
    string symbol              = 1; /// 合约代码
    string symbol_name         = 2; /// 合约名称
    ExchangeType exchange      = 3; /// 交易所
    optional string underlying = 4; /// 基础合约
}

message Symbols
{
    repeated Symbol symbols = 1;
}

message Fund
{
    string account_id                     = 1; /// 资金账户
    double available_fund                 = 2; /// 可用资金
    double withdrawn_fund                 = 3; /// 可取资金
    double frozen_fund                    = 4; /// 冻结资金
    double frozen_margin                  = 5; /// 冻结保证金
    double frozen_commission              = 6; /// 冻结手续费
    google.protobuf.Timestamp update_time = 7; /// 更新时间
}

message Funds
{
    repeated Fund funds = 1;
}

message Position
{
    string symbol                         = 1;  /// 合约代码
    int64 yesterday_position              = 2;  /// 上日持仓
    int64 today_position                  = 3;  /// 今日持仓
    optional int64 open_volume            = 4;  /// 开仓量
    optional int64 close_volume           = 5;  /// 平仓量
    optional double position_cost         = 6;  /// 持仓成本
    optional double pre_margin            = 7;  /// 上次占用的保证金
    optional double used_margin           = 8;  /// 占用的保证金
    optional double frozen_margin         = 9;  /// 可用保证金
    optional double open_cost             = 10; /// 开仓成本
    google.protobuf.Timestamp update_time = 11; /// 更新时间
}

message Positions
{
    repeated Position positions = 1;
}

message Order
{
    int64 unique_id                         = 1;  /// 唯一 ID
    optional string broker_id               = 2;  /// 券商 ID
    optional string exchange_id             = 3;  /// 交易所 ID
    string symbol                           = 4;  /// 合约代码
    SideType side                           = 5;  /// 买卖方向
    optional PositionSideType position_side = 6;  /// 开平方向
    double price                            = 7;  /// 价格
    int64 quantity                          = 8;  /// 数量
    google.protobuf.Timestamp creation_time = 9;  /// 创建时间
    google.protobuf.Timestamp update_time   = 10; /// 更新时间
}

message Orders
{
    repeated Order orders = 1;
}

message OrderTick
{
    int64 unique_id      = 1; /// 委托 UniqueID
    OrderType order_type = 2; /// 委托类型
    string symbol        = 3; /// 合约代码
    SideType side        = 4; /// 买卖方向
    double price         = 5; /// 价格
    int64 quantity       = 6; /// 当笔数量
    int64 exchange_time  = 7; /// 交易所时间
}

message TradeTick
{
    string symbol       = 1; /// 合约代码
    double exec_price   = 2; /// 执行价格
    int64 exec_quantity = 3; /// 执行数量
    int64 exchange_time = 4; /// 交易所时间
}
