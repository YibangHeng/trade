syntax = "proto3";

package trade.types;

import "google/protobuf/timestamp.proto";

import "base.proto";
import "enums.proto";

message Symbol
{
    string symbol              = 1; /// 合约代码
    string symbol_name         = 2; /// 合约名称
    ExchangeType exchange      = 3; /// 交易所
    optional string underlying = 4; /// 基础合约
}

message Symbols
{
    repeated Symbol symbols = 1;
}

message Fund
{
    string account_id                     = 1; /// 资金账户
    double available_fund                 = 2; /// 可用资金
    double withdrawn_fund                 = 3; /// 可取资金
    double frozen_fund                    = 4; /// 冻结资金
    double frozen_margin                  = 5; /// 冻结保证金
    double frozen_commission              = 6; /// 冻结手续费
    google.protobuf.Timestamp update_time = 7; /// 更新时间
}

message Funds
{
    repeated Fund funds = 1;
}

message Position
{
    string symbol                         = 1;  /// 合约代码
    int64 yesterday_position              = 2;  /// 上日持仓
    int64 today_position                  = 3;  /// 今日持仓
    optional int64 open_volume            = 4;  /// 开仓量
    optional int64 close_volume           = 5;  /// 平仓量
    optional double position_cost         = 6;  /// 持仓成本
    optional double pre_margin            = 7;  /// 上次占用的保证金
    optional double used_margin           = 8;  /// 占用的保证金
    optional double frozen_margin         = 9;  /// 可用保证金
    optional double open_cost             = 10; /// 开仓成本
    google.protobuf.Timestamp update_time = 11; /// 更新时间
}

message Positions
{
    repeated Position positions = 1;
}

message Order
{
    int64 unique_id                         = 1;  /// 唯一 ID
    optional string broker_id               = 2;  /// 券商 ID
    optional string exchange_id             = 3;  /// 交易所 ID
    string symbol                           = 4;  /// 合约代码
    SideType side                           = 5;  /// 买卖方向
    optional PositionSideType position_side = 6;  /// 开平方向
    double price                            = 7;  /// 价格
    int64 quantity                          = 8;  /// 数量
    google.protobuf.Timestamp creation_time = 9;  /// 创建时间
    google.protobuf.Timestamp update_time   = 10; /// 更新时间
}

message Orders
{
    repeated Order orders = 1;
}

///
/// 行情信息
///

/// 逐笔委托信息
message OrderTick
{
    int64 unique_id                        = 1;   /// 委托 UniqueID
    OrderType order_type                   = 2;   /// 委托类型
    string symbol                          = 3;   /// 合约代码
    SideType side                          = 4;   /// 买卖方向
    int64 price_1000x                      = 5;   /// 价格
    int64 quantity                         = 6;   /// 数量
    int64 exchange_time                    = 7;   /// 交易所时间（HHMMSSmmm）
    optional int64 x_ost_sse_ask_unique_id = 100; /// 上交所卖方委托 UniqueID
    optional int64 x_ost_sse_bid_unique_id = 101; /// 上交所买方委托 UniqueID
}

/// 逐笔成交信息
message TradeTick
{
    int64 ask_unique_id                    = 1;   /// 卖方委托 UniqueID
    int64 bid_unique_id                    = 2;   /// 买方委托 UniqueID
    string symbol                          = 3;   /// 合约代码
    int64 exec_price_1000x                 = 4;   /// 执行价格
    int64 exec_quantity                    = 5;   /// 执行数量
    int64 exchange_time                    = 6;   /// 交易所时间（HHMMSSmmm）
    optional OrderType x_ost_szse_exe_type = 100; /// 深交所成交类型（仅区分成交/撤单）
}

/// L2 行情信息（交易所切片）
message ExchangeL2Snap
{
    string symbol       = 1; /// 合约代码
    double price        = 2; /// 最新价格
    int64 exchange_time = 6; /// 交易所时间（HHMMSSmmm）
    reserved 3, 4, 5;

    optional double pre_settlement    = 7;  /// 上日结算价
    optional double pre_close_price   = 8;  /// 上日收盘价
    optional double open_price        = 9;  /// 开盘价
    optional double highest_price     = 10; /// 最高价
    optional double lowest_price      = 11; /// 最低价
    optional double close_price       = 12; /// 收盘价
    optional double settlement_price  = 13; /// 结算价
    optional double upper_limit_price = 14; /// 涨停价
    optional double lower_limit_price = 15; /// 跌停价

    optional double sell_price_5      = 1105; /// 卖 5
    optional int64 sell_quantity_5    = 1205; /// 卖 5
    optional double sell_price_4      = 1104; /// 卖 4
    optional int64 sell_quantity_4    = 1204; /// 卖 4
    optional double sell_price_3      = 1103; /// 卖 3
    optional int64 sell_quantity_3    = 1203; /// 卖 3
    optional double sell_price_2      = 1102; /// 卖 2
    optional int64 sell_quantity_2    = 1202; /// 卖 2
    optional double sell_price_1      = 1101; /// 卖 1
    optional int64 sell_quantity_1    = 1201; /// 卖 1
    optional double buy_price_1       = 2101; /// 买 1
    optional int64 buy_quantity_1     = 2201; /// 买 1
    optional double buy_price_2       = 2102; /// 买 2
    optional int64 buy_quantity_2     = 2202; /// 买 2
    optional double buy_price_3       = 2103; /// 买 3
    optional int64 buy_quantity_3     = 2203; /// 买 3
    optional double buy_price_4       = 2104; /// 买 4
    optional int64 buy_quantity_4     = 2204; /// 买 4
    optional double buy_price_5       = 2105; /// 买 5
    optional int64 buy_quantity_5     = 2205; /// 买 5
}

/// L2 行情信息（逐笔撮合）
message GeneratedL2Tick
{
    string symbol                         = 1; /// 合约代码
    int64 price_1000x                     = 2; /// 当笔成交价格
    int64 quantity                        = 3; /// 当笔数量
    int64 ask_unique_id                   = 4; /// 卖方委托 UniqueID
    int64 bid_unique_id                   = 5; /// 买方委托 UniqueID
    int64 exchange_time                   = 6; /// 交易所时间（HHMMSSmmm）

    bool result                           = 7; /// 撮合验证结果

    repeated PriceQuantityPair ask_levels = 1000; /// 五档卖盘
    repeated PriceQuantityPair bid_levels = 1001; /// 五档买盘
}

/// 区间粒子数据
message RangedTick
{
    string symbol                       = 1; /// 合约代码
    int64 start_time                    = 2; /// 区间开始时间（闭，HHMMSSmmm）
    int64 end_time                      = 3; /// 区间结束时间（开，HHMMSSmmm）
    int64 exchange_time                 = 4; /// 交易所时间（HHMMSSmmm）

    int64 active_sell_number            = 1001; /// 主卖成交笔数
    int64 active_sell_number_in_queue   = 1002; /// 主卖报单笔数
    int64 active_sell_quantity          = 1003; /// 主卖成交数量
    int64 active_sell_amount_1000x      = 1004; /// 主卖成交金额
    int64 active_buy_number             = 1101; /// 主买成交笔数
    int64 active_buy_number_in_queue    = 1102; /// 主买报单笔数
    int64 active_buy_quantity           = 1103; /// 主买成交数量
    int64 active_buy_amount_1000x       = 1104; /// 主买成交金额

    repeated double weighted_ask_price  = 2000; /// 五档加权主卖报单价
    repeated double weighted_bid_price  = 2001; /// 五档加权主买报单价

    int64 aggressive_sell_quantity      = 3001; /// 新增激进主卖单量
    int64 aggressive_buy_quantity       = 3002; /// 新增激进主买单量

    int64 new_added_ask_1_quantity      = 4001; /// 新增卖一量合计
    int64 new_added_bid_1_quantity      = 4002; /// 新增买一量合计
    int64 new_canceled_ask_1_quantity   = 4003; /// 新撤单卖一量合计
    int64 new_canceled_bid_1_quantity   = 4004; /// 新撤单买一量合计
    int64 new_canceled_ask_all_quantity = 4005; /// 新撤单卖单量合计
    int64 new_canceled_bid_all_quantity = 4006; /// 新撤单买单量合计

    int64 big_ask_quantity              = 5001; /// 大单卖单量
    int64 big_bid_quantity              = 5002; /// 大单买单量

    int64 highest_ask_price_1000x       = 6001; /// 最高卖价
    int64 lowest_bid_price_1000x        = 6002; /// 最低买价

    int64 valid_ask_1_per               = 7001; /// 卖一档有效时间
    int64 valid_bid_1_per               = 7002; /// 买一档有效时间
}
